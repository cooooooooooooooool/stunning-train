
message("lele")
message(${PROCESS_LIBS}+"\n")
message("${LELE_LIBS}")

include_directories("/home/lilelr/open-source/libprocess-start/3rdparty/stout/include")
set(lele_stout_my_learning_SRC lele_stout_my_learning.cpp)
add_executable(lele_stout_my_learning_main ${lele_stout_my_learning_SRC})
target_link_libraries(lele_stout_my_learning_main  gmock gtest pthread)


set(lele_option_usage_SRC lele_option_usage.cpp)
add_executable(lele_option_usage_main ${lele_option_usage_SRC})
target_link_libraries(lele_option_usage_main  gmock gtest pthread)

set(lele_try_tests_SRC lele_try_tests.cpp)
add_executable(lele_try_tests_main ${lele_try_tests_SRC})
target_link_libraries(lele_try_tests_main  gmock gtest pthread)


set(lele_result_tests_SRC lele_result_tests.cpp)
add_executable(lele_result_tests_main ${lele_result_tests_SRC})
target_link_libraries(lele_result_tests_main  gmock gtest pthread)


set(lele_none_tests_SRC lele_none_tests.cpp)
add_executable(lele_none_tests_main ${lele_none_tests_SRC})
target_link_libraries(lele_none_tests_main  gmock gtest pthread)

set(lele_some_tests_SRC lele_some_tests.cpp)
add_executable(lele_some_tests_main ${lele_some_tests_SRC})
target_link_libraries(lele_some_tests_main  gmock gtest pthread)